// Generated by CoffeeScript 1.4.0
(function() {

  angular.module('tmg').directive("menu", [
    "$dictionary", "$cookies", function($dictionary, $cookies) {
      return {
        restrict: "EA",
        transclude: true,
        templateUrl: 'static/scripts/directives/menu.html',
        scope: {
          'type': '@'
        },
        controller: function($scope, $element) {},
        link: function(scope, elm, attrs) {
          var process;
          scope.map = {
            content: []
          };
          scope.menu = [];
          scope.onroot = true;
          scope.content = null;
          process = function(data) {
            var c, e, i, _i, _len, _results;
            scope.menu = [];
            _results = [];
            for (_i = 0, _len = data.length; _i < _len; _i++) {
              i = data[_i];
              e = {
                id: i.id,
                name: {
                  kz: i.name_kz,
                  en: i.name_en,
                  ru: i.name_ru
                }
              };
              scope.menu.push(angular.copy(e));
              c = {
                kz: i.content_kz,
                en: i.content_en,
                ru: i.content_ru
              };
              _results.push(scope.map.content['m' + i.id] = c);
            }
            return _results;
          };
          scope.fetch = function(hierarchyId) {
            if (hierarchyId) {
              $dictionary.children(scope.type, hierarchyId, function(data) {
                return process(data);
              });
            } else {
              $dictionary.root(scope.type, function(data) {
                return process(data);
              });
            }
            if (scope.map.content['m' + hierarchyId] != null) {
              return scope.content = scope.map.content['m' + hierarchyId];
            } else {
              return scope.content = null;
            }
          };
          scope.breadcrumbs = [];
          scope.select = function(item) {
            scope.breadcrumbs.push(angular.copy(item));
            scope.fetch(item.id);
            return scope.onroot = false;
          };
          scope.fetch();
          return scope.$watch(function() {
            return $cookies.get('lng');
          }, function(newvalue, oldvalue) {
            if (newvalue === 'kk' || newvalue === 'kz') {
              return scope.lng = 'kz';
            } else {
              return scope.lng = newvalue;
            }
          });
        }
      };
    }
  ]);

}).call(this);
